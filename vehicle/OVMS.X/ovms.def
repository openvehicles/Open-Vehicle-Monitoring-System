/*
;    Project:       Open Vehicle Monitor System
;    Date:          16 October 2011
;
;    Changes:
;    1.0  Initial release
;
;    (C) 2011  Michael Stegen / Stegen Electronics
;    (C) 2011  Mark Webb-Johnson
;    (C) 2011  Sonny Chen @ EPRO/DX
;
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
; copies of the Software, and to permit persons to whom the Software is
; furnished to do so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in
; all copies or substantial portions of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
; THE SOFTWARE.
*/

// The OVMS_SOCALERT switch will enable a feature such that if the SOC falls
// below 5%, and the car is switched off (ie; not driving), the car will alert
// (by SMS and net PUSH msg) every twelve hours, until such time as the SOC
// recovers to at least 5%.
#define OVMS_SOCALERT

// The OVMS project started with support for v2.x Tesla Roadsters, and was
// then extended to support v1.5 Tesla Roadsters. Now, it is being extended
// to support other car types as well, with the first being the Volt/Ampera.
// So, we now have switches to control which car type is to be built. Only
// one of the following should be defined.
//#define OVMS_CAR_NONE
//#define OVMS_CAR_TESLAROADSTER
//#define OVMS_CAR_VOLTAMPERA
//#define OVMS_CAR_RENAULTTWIZY
//#define OVMS_CAR_OBDII
//#define OVMS_CAR_THINKCITY
//#define OVMS_CAR_NISSANLEAF
//#define OVMS_CAR_TAZZARI
//#define OVMS_CAR_MITSUBISHI
//#define OVMS_CAR_TRACK
//#define OVMS_CAR_KYBURZ

// August 2012 saw the introduction of a new hardware platform (v2), with
// support for SIM908 GPS, voltage sampling, a new processor, and a few other
// things. V1 uses PIC18F280+SIM900 and V2 uses PIC18F2685+SIM908.
// We now have a switch to control the build for V1 or V2 hardware platform.
//#define OVMS_HW_V1
//#define OVMS_HW_V2

// The DIAG code is a set of enhancement to support a DIAG mode on the
// serial port. It is primarily used for QC purposes, but also useful
// for advanced diagnostics.
// #define OVMS_DIAGMODULE

// The ACC code provides for advanced charge control - sophisticated charging
// algorithms.
// #define OVMS_ACCMODULE

// The OVMS_POLLER code supports OBDII polling for various vehicles. It should
// be enabled for those vehicles that require it.
// #define OVMS_POLLER
